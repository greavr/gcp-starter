# Cloud Build configuration for deploying Terraform from the 'Terraform/' subdirectory,
# fetching a variables file from GCS.

steps:
  # 1. Download the Terraform variables file from GCS
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gsutil'
    args:
      - 'cp'
      - 'gs://${_BUCKET_NAME}/${_VARS_FILE_GCS_PATH}' 
      - 'terraform/${_VARS_FILE_NAME}'              
    id: 'fetch-tfvars'

  # 2. Initialize Terraform in the Terraform subdirectory
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args: ['init']
    dir: 'terraform' 
    id: 'terraform-init'
    waitFor: ['fetch-tfvars'] # Ensure tfvars file is downloaded first

  # 3. Create Terraform Plan (Optional but recommended)
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args:
      - 'plan'
      - '-var-file=${_VARS_FILE_NAME}'
      - '-out=tfplan'
    dir: 'terraform' 
    id: 'terraform-plan'
    waitFor: ['terraform-init']

  # 4. Upload the Terraform plan file to GCS
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gsutil'
    args:
      - 'cp'
      - 'terraform/tfplan'
      - 'gs://${_BUCKET_NAME}/plans/tfplan-${_CUSTOMER}/$BUILD_ID'
    id: 'upload-tfplan'
    waitFor: ['terraform-plan'] # Ensure plan exists before uploading

  # 5. Apply Terraform configuration
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args:
      - 'apply'
      - '-auto-approve'
      - 'tfplan' 
    dir: 'terraform' 
    id: 'terraform-apply'
    waitFor: ['terraform-plan']


substitutions:
  _BUCKET_NAME: '${PROJECT_ID}-terraform'                 
  _VARS_FILE_GCS_PATH: 'prod'  
  _VARS_FILE_NAME: 'terraform.tfvars'                  
  _TERRAFORM_VERSION: '1.8.2'
  _CUSTOMER: 'default'

# Optional: Specify timeout for the build
timeout: '1200s'

options:
  logging: GCS  
  logsBucket: 'gs://${PROJECT_ID}-terraform/logs'  