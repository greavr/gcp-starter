# Cloud Build configuration for deploying Terraform from the 'Terraform/' subdirectory,
# fetching a variables file from GCS.

steps:
  # 1. Download the Terraform variables file from GCS
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gsutil'
    args:
      - 'cp'
      - 'gs://${_BUCKET_NAME}/${_VARS_FILE_GCS_PATH}' 
      - 'terraform/${_VARS_FILE_NAME}'              
    id: 'fetch-tfvars'

  # 2. Initialize Terraform in the Terraform subdirectory
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args: ['init']
    dir: 'terraform' 
    id: 'terraform-init'
    waitFor: ['fetch-tfvars'] # Ensure tfvars file is downloaded first

  # 3. Create Terraform Plan (Optional but recommended)
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args:
      - 'plan'
      - '-var-file=${_VARS_FILE_NAME}'
      - '-out=tfplan'
    dir: 'terraform' 
    id: 'terraform-plan'
    waitFor: ['terraform-init']

  # 4. Upload the Terraform plan file to GCS
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gsutil'
    args:
      - 'cp'
      - 'terraform/tfplan'
      - 'gs://${_BUCKET_NAME}/plans/tfplan-$BUILD_ID'
    id: 'upload-tfplan'
    waitFor: ['terraform-plan'] # Ensure plan exists before uploading

  # 5. Apply Terraform configuration
  - name: 'hashicorp/terraform:${_TERRAFORM_VERSION}'
    args:
      - 'apply'
      - '-auto-approve'
      - 'tfplan' # Apply the plan saved in the previous step
    dir: 'terraform' 
    id: 'terraform-apply'
    waitFor: ['terraform-plan']


substitutions:
  _BUCKET_NAME: 'your-gcs-bucket-name'                  # <-- Replace with your GCS bucket name
  _VARS_FILE_GCS_PATH: 'path/to/your/terraform.tfvars'  # <-- Replace with the path within the bucket (e.g., config/production.tfvars)
  _VARS_FILE_NAME: 'terraform.tfvars'                   # <-- Replace with the actual filename (e.g., production.tfvars)
  _TERRAFORM_VERSION: '1.8.2'                           # <-- Specify the Terraform version you want to use (check for latest stable)

# Optional: Specify timeout for the build
timeout: '1200s'

# Optional: Specify the service account Cloud Build should use.
serviceAccount: 'projects/your-project-id/serviceAccounts/your-custom-service-account@your-project-id.iam.gserviceaccount.com'
